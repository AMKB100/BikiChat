import os
import asyncio
from google import genai
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

# --- 1) –°–µ–∫—Ä–µ—Ç—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

if not TELEGRAM_BOT_TOKEN:
    raise RuntimeError("–ù–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_BOT_TOKEN")
if not GEMINI_API_KEY:
    raise RuntimeError("–ù–µ –Ω–∞–π–¥–µ–Ω GEMINI_API_KEY")

# --- 2) –ö–ª–∏–µ–Ω—Ç Gemini (–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π SDK) ---
# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –∫–≤–∏–∫—Å—Ç–∞—Ä—Ç: google-genai, –º–æ–¥–µ–ª—å gemini-2.5-flash
# https://ai.google.dev/gemini-api/docs/quickstart
client = genai.Client(api_key=GEMINI_API_KEY)
MODEL_NAME = "gemini-2.5-flash"

# --- 3) –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞ /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –Ω–∞ Google Gemini. –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!"
    )

# --- 4) –û—Ç–≤–µ—Ç—ã –Ω–∞ –ª—é–±—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ---
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text or ""
    try:
        # –í—ã–∑–æ–≤ SDK —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π ‚Üí —É–Ω–æ—Å–∏–º –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å event loop PTB
        response = await asyncio.to_thread(
            client.models.generate_content,
            model=MODEL_NAME,
            contents=user_text,
        )
        reply = response.text or "–ò–∑–≤–∏–Ω–∏—Ç–µ, –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç."
    except Exception as e:
        reply = f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}"

    await update.message.reply_text(reply)

def main():
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()  # long polling

if __name__ == "__main__":
    main()
